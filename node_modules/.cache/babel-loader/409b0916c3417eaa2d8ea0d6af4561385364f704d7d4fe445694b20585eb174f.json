{"ast":null,"code":"var _jsxFileName = \"/Users/sese11087/Documents/Coding/Job/Projects/todo-app/src/App.js\",\n  _s = $RefreshSig$();\nimport logo from './logo.svg';\nimport './App.css';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [tasks, setTasks] = useState([{\n    title: 'Sample Task',\n    completed: false\n  }]);\n  const [inputValue, setInputValue] = useState('');\n  const addTask = taskTitle => {\n    const newTask = {\n      title: taskTitle,\n      completed: false\n    };\n    setTasks([...tasks, newTask]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"My To-Do List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Add a new task\",\n      value: inputValue,\n      onChange: e => setInputValue(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        addTask(inputValue);\n        setInputValue('');\n      },\n      children: \"Add\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: tasks.map((task, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: task.completed ? /*#__PURE__*/_jsxDEV(\"s\", {\n          children: task.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 31\n        }, this) : task.title\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"MAuECOAFv9qdMmknW1dmwTjQUP4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["logo","useState","jsxDEV","_jsxDEV","App","_s","tasks","setTasks","title","completed","inputValue","setInputValue","addTask","taskTitle","newTask","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","map","task","index","_c","$RefreshReg$"],"sources":["/Users/sese11087/Documents/Coding/Job/Projects/todo-app/src/App.js"],"sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport { useState } from 'react';\n\n\nfunction App() {\n  const [tasks, setTasks] = useState([\n    { title: 'Sample Task', completed: false }\n  ]);\n\n  const [inputValue, setInputValue] = useState('');\n\n  const addTask = (taskTitle) => {\n    const newTask = { title: taskTitle, completed: false };\n    setTasks([...tasks, newTask]);\n  };\n\n\n  return (\n    <div className=\"App\">\n      <h1>My To-Do List</h1>\n      <input\n        type=\"text\"\n        placeholder=\"Add a new task\"\n        value={inputValue}\n        onChange={(e) => setInputValue(e.target.value)}\n      />\n      <button onClick={() => {\n        addTask(inputValue);\n        setInputValue('');\n      }}>\n        Add\n      </button>\n      <ul>\n        {tasks.map((task, index) => (\n          <li key={index}>\n            {task.completed ? <s>{task.title}</s> : task.title}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,IAAI,MAAM,YAAY;AAC7B,OAAO,WAAW;AAClB,SAASC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGjC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAC,CACjC;IAAEO,KAAK,EAAE,aAAa;IAAEC,SAAS,EAAE;EAAM,CAAC,CAC3C,CAAC;EAEF,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAEhD,MAAMW,OAAO,GAAIC,SAAS,IAAK;IAC7B,MAAMC,OAAO,GAAG;MAAEN,KAAK,EAAEK,SAAS;MAAEJ,SAAS,EAAE;IAAM,CAAC;IACtDF,QAAQ,CAAC,CAAC,GAAGD,KAAK,EAAEQ,OAAO,CAAC,CAAC;EAC/B,CAAC;EAGD,oBACEX,OAAA;IAAKY,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBb,OAAA;MAAAa,QAAA,EAAI;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACtBjB,OAAA;MACEkB,IAAI,EAAC,MAAM;MACXC,WAAW,EAAC,gBAAgB;MAC5BC,KAAK,EAAEb,UAAW;MAClBc,QAAQ,EAAGC,CAAC,IAAKd,aAAa,CAACc,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChD,CAAC,eACFjB,OAAA;MAAQwB,OAAO,EAAEA,CAAA,KAAM;QACrBf,OAAO,CAACF,UAAU,CAAC;QACnBC,aAAa,CAAC,EAAE,CAAC;MACnB,CAAE;MAAAK,QAAA,EAAC;IAEH;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACTjB,OAAA;MAAAa,QAAA,EACGV,KAAK,CAACsB,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBACrB3B,OAAA;QAAAa,QAAA,EACGa,IAAI,CAACpB,SAAS,gBAAGN,OAAA;UAAAa,QAAA,EAAIa,IAAI,CAACrB;QAAK;UAAAS,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,GAAGS,IAAI,CAACrB;MAAK,GAD3CsB,KAAK;QAAAb,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEV,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV;AAACf,EAAA,CArCQD,GAAG;AAAA2B,EAAA,GAAH3B,GAAG;AAuCZ,eAAeA,GAAG;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}