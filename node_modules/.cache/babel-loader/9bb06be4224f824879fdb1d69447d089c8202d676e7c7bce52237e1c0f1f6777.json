{"ast":null,"code":"var _jsxFileName = \"/Users/sese11087/Documents/Coding/Job/Projects/todo-app/src/App.js\",\n  _s = $RefreshSig$();\nimport logo from './logo.svg';\nimport './App.css';\nimport { useState } from 'react';\nimport { useEffect } from 'react'; // Import useEffect\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [tasks, setTasks] = useState(() => {\n    // Try to load tasks from local storage when initializing state\n    const savedTasks = localStorage.getItem('tasks');\n    return savedTasks ? JSON.parse(savedTasks) : [];\n  });\n  const [inputValue, setInputValue] = useState('');\n  const addTask = taskTitle => {\n    const newTask = {\n      title: taskTitle,\n      completed: false\n    };\n    setTasks([...tasks, newTask]);\n  };\n  const toggleCompletion = index => {\n    const updatedTasks = [...tasks];\n    updatedTasks[index].completed = !updatedTasks[index].completed;\n    setTasks(updatedTasks);\n  };\n  const deleteTask = index => {\n    const updatedTasks = [...tasks];\n    updatedTasks.splice(index, 1);\n    setTasks(updatedTasks);\n  };\n  const [editingIndex, setEditingIndex] = useState(null);\n  const startEditing = index => {\n    setEditingIndex(index);\n  };\n  const saveEdit = title => {\n    const updatedTasks = [...tasks];\n    updatedTasks[editingIndex].title = title;\n    setTasks(updatedTasks);\n    setEditingIndex(null);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"My To-Do List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Add a new task\",\n        value: inputValue,\n        onChange: e => setInputValue(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => addTask(inputValue),\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: tasks.map((task, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: editingIndex === index ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: task.title,\n            onChange: e => {\n              const updatedTasks = [...tasks];\n              updatedTasks[index].title = e.target.value;\n              setTasks(updatedTasks);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => saveEdit(task.title),\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [task.completed ? /*#__PURE__*/_jsxDEV(\"s\", {\n            children: task.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 35\n          }, this) : task.title, /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => toggleCompletion(index),\n            children: \"Toggle\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => deleteTask(index),\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => startEditing(index),\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"wpqlKkhQhXOH9NthdyinOtDfhsY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["logo","useState","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","tasks","setTasks","savedTasks","localStorage","getItem","JSON","parse","inputValue","setInputValue","addTask","taskTitle","newTask","title","completed","toggleCompletion","index","updatedTasks","deleteTask","splice","editingIndex","setEditingIndex","startEditing","saveEdit","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","map","task","_c","$RefreshReg$"],"sources":["/Users/sese11087/Documents/Coding/Job/Projects/todo-app/src/App.js"],"sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport { useState } from 'react';\nimport { useEffect } from 'react'; // Import useEffect\n\n\nfunction App() {\n  const [tasks, setTasks] = useState(() => {\n    // Try to load tasks from local storage when initializing state\n    const savedTasks = localStorage.getItem('tasks');\n    return savedTasks ? JSON.parse(savedTasks) : [];\n  });\n\n  const [inputValue, setInputValue] = useState('');\n\n  const addTask = (taskTitle) => {\n    const newTask = { title: taskTitle, completed: false };\n    setTasks([...tasks, newTask]);\n  };\n\n  const toggleCompletion = (index) => {\n    const updatedTasks = [...tasks];\n    updatedTasks[index].completed = !updatedTasks[index].completed;\n    setTasks(updatedTasks);\n  };\n\n  const deleteTask = (index) => {\n    const updatedTasks = [...tasks];\n    updatedTasks.splice(index, 1);\n    setTasks(updatedTasks);\n  };\n\n  const [editingIndex, setEditingIndex] = useState(null);\n  const startEditing = (index) => {\n    setEditingIndex(index);\n  };\n  const saveEdit = (title) => {\n    const updatedTasks = [...tasks];\n    updatedTasks[editingIndex].title = title;\n    setTasks(updatedTasks);\n    setEditingIndex(null);\n  };\n\n\n  return (\n    <div className=\"App\">\n      <h1>My To-Do List</h1>\n      <div>\n        <input\n          type=\"text\"\n          placeholder=\"Add a new task\"\n          value={inputValue}\n          onChange={(e) => setInputValue(e.target.value)}\n        />\n        <button onClick={() => addTask(inputValue)}>Add</button>\n      </div>\n      <ul>\n        {tasks.map((task, index) => (\n          <li key={index}>\n            {editingIndex === index ? (\n              <>\n                <input\n                  type=\"text\"\n                  value={task.title}\n                  onChange={(e) => {\n                    const updatedTasks = [...tasks];\n                    updatedTasks[index].title = e.target.value;\n                    setTasks(updatedTasks);\n                  }}\n                />\n                <button onClick={() => saveEdit(task.title)}>Save</button>\n              </>\n            ) : (\n              <>\n                {task.completed ? <s>{task.title}</s> : task.title}\n                <button onClick={() => toggleCompletion(index)}>Toggle</button>\n                <button onClick={() => deleteTask(index)}>Delete</button>\n                <button onClick={() => startEditing(index)}>Edit</button>\n              </>\n            )}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}